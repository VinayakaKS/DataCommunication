BITSTUFFING

#include<stdio.h>
#include<string.h>
void main(){
    char ch, arr[50]={"01111110"}, rec[50];
    int i,j,k,len=8,cnt=0;

    printf("Enter the data: ");
    while((ch=getchar())!='\t'){
        if (ch=='1') cnt++;
        else cnt=0;
        arr[len++]=ch;

        if (cnt==5)
        {
            arr[len++]='0';
            cnt=0;
        }
    }
    strcat(arr, "01111110");

    printf("\nBit stuffed stream: ");
    for(i=0;i<len+8;i++) printf("%c", arr[i]);

    //Destuffing
    cnt=0;
    printf("\nThe destuffed stream:");
    
    for(j=8,k=0;j<len;j++){
        if(arr[j]=='1') cnt++;
        else cnt=0;

        rec[k++]=arr[j];
        
        if(cnt==5 && arr[j+1]=='0'){
            j++;
            cnt=0;
        }
    }

    for(j=0;j<k;j++) printf("%c", rec[j]);
}

CRC

#include<stdio.h>
#include<stdlib.h>
#include<string.h>

#define N strlen(g)

char t[128], cs[128], g[]="10110";
int a,e,c;

void xor(){
    for(c=1;c<N;c++){
        cs[c]=((cs[c]==g[c]?'0':'1'));
    }
}

void crc(){
    for(e=0;e<N;e++) cs[e]=t[e];
        do{
            if (cs[0]=='1') xor();
            for(c=0;c<N-1;c++){
                cs[c]=cs[c+1];
            }
            cs[c]=t[e++];            
        }while (e<=a+N-1);
}

void main(){
    printf("\nEnter the polygon: ");
    scanf("%s", t);
    
    printf("Generating Polynomial: %s", g);

    a=strlen(t);
    for(e=a;e<a+N-1;e++) t[e]='0';

    printf("\n\nModified t[u]: %s", t);
    crc();
    printf("\nChecksum: %s", cs);

    for(e=a;e<a+N-1;e++) t[e]=cs[e-a];
    printf("\n\nFinal codeword: %s", t);

    //Useless piece of code 
    int check,pos;
    printf("\n\nTest error detection 0(yes) 1(no)?");
    scanf("%d",&check);

    if(check==0){
        printf("Enter the position to insert error: ");
        scanf("%d", &pos);
        t[pos]=(t[pos]=='1'?'0':'1');
        printf("\nErroneous data: %s", t);
        printf("\nError detected");
    }

    else{
        printf("\nNo error");
    }
}

BYTESTUFFING

#include<stdio.h>
#include<string.h>
#define DLE 16
#define STX 2
#define ETX 3

void main(){
    char ch, arr[50]={DLE, STX}, rec[50];
    int len=2,j,i;

    printf("Enter the data stream \ncntrl+p -> DLE cntrl+->STX cntrl+c->ETX \n");
    while((ch=getchar())!='\t'){
        if(ch==DLE){
            arr[len++]=DLE;
            printf("DLE");
        }
        else if(ch==STX) printf("STX");
        else if(ch==ETX) printf("ETX");
        else printf("%c", ch);
        arr[len++]=ch;
    }

    arr[len++]=DLE;
    arr[len++]=ETX;

    printf("\nStuffed stream: ");
    for(i=0;i<len;i++){
        ch=arr[i];
        if(ch==DLE) printf("DLE");
        else if(ch==STX) printf("STX");
        else if(ch==ETX) printf("ETX");
        else printf("%c", ch);
    }

    //Destuffing

    printf("\nDestuffed stream: ");
    for(j=2;j<len-2;j++){
        ch=arr[j];
        if(ch==DLE){
            printf("DLE");
            j++;
        }
        else if(ch==STX) printf("STX");
        else if(ch==ETX) printf("ETX");
        else printf("%c", ch);        
    }
}


ENCRYPTION

#include<stdio.h>
#include<string.h>
#include<ctype.h>

#define max 1000

int main(){
    int s,pi,ci;
    char plain[max], cipher[max];

    printf("\nEnter the plain text: ");
    fgets(plain, max, stdin);
    printf("Enter the number of shifts: ");
    scanf("%d", &s);

    for(ci=0,pi=0;plain[pi]!='\0';pi++)
    if(isalpha(plain[pi])) cipher[ci++]=((toupper(plain[pi])-'A')+s%26)%26 + 'A';  
   
    cipher[ci]='\0';
    printf("The ciphered text: %s", cipher);

    printf("\n\nDecryption\nEnter the key for decryption: ");
    scanf("%d", &s);

    for(ci=0,pi=0;cipher[ci]!='\0';ci++)
    plain[pi++]=((cipher[ci]-'A')+ (26-s))%26+'A';
    plain[pi]='\0';
    printf("The deciphered text: %s", plain);
}
